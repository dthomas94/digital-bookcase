/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  ISO8601Date: { input: any; output: any; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
};

/** Autogenerated input type of AddWorkToBookcase */
export type AddWorkToBookcaseInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['Int']['input'];
  workKey: Scalars['String']['input'];
};

/** Autogenerated return type of AddWorkToBookcase. */
export type AddWorkToBookcasePayload = {
  __typename?: 'AddWorkToBookcasePayload';
  bookcase: Bookcase;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

export type Author = {
  __typename?: 'Author';
  data: AuthorData;
  key: Scalars['String']['output'];
  lastModified: Scalars['ISO8601Date']['output'];
  revision: Scalars['Int']['output'];
};

export type AuthorData = {
  __typename?: 'AuthorData';
  alternateNames?: Maybe<Array<Scalars['String']['output']>>;
  bio?: Maybe<Scalars['String']['output']>;
  easternOrder?: Maybe<Scalars['Boolean']['output']>;
  enumeration?: Maybe<Scalars['String']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  links?: Maybe<Array<AuthorDataLink>>;
  name: Scalars['String']['output'];
  personalName?: Maybe<Scalars['String']['output']>;
  photos?: Maybe<Array<Scalars['String']['output']>>;
  sourceRecords?: Maybe<Array<Scalars['String']['output']>>;
  title?: Maybe<Scalars['String']['output']>;
  uris?: Maybe<Array<Scalars['String']['output']>>;
};

export type AuthorDataLink = {
  __typename?: 'AuthorDataLink';
  title?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type Bookcase = {
  __typename?: 'Bookcase';
  id: Scalars['String']['output'];
  /** name of the bookcase */
  name: Scalars['String']['output'];
  /** id of the user the bookcase was made by */
  userId: Scalars['String']['output'];
  /** array of the work key */
  workKeys: Array<Scalars['String']['output']>;
};

/** Autogenerated input type of CreateBookcase */
export type CreateBookcaseInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  userId: Scalars['Int']['input'];
};

/** Autogenerated return type of CreateBookcase. */
export type CreateBookcasePayload = {
  __typename?: 'CreateBookcasePayload';
  bookcase: Bookcase;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addWorkToBookcase?: Maybe<AddWorkToBookcasePayload>;
  createBookcase?: Maybe<CreateBookcasePayload>;
};


export type MutationAddWorkToBookcaseArgs = {
  input: AddWorkToBookcaseInput;
};


export type MutationCreateBookcaseArgs = {
  input: CreateBookcaseInput;
};

export type Query = {
  __typename?: 'Query';
  authors: Array<Author>;
  /** The current logged in user */
  currentUser?: Maybe<User>;
  works: Array<Work>;
};


export type QueryAuthorsArgs = {
  name?: InputMaybe<Scalars['String']['input']>;
};


export type QueryWorksArgs = {
  title?: InputMaybe<Scalars['String']['input']>;
};

export type User = {
  __typename?: 'User';
  email: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type Work = {
  __typename?: 'Work';
  authors: Array<Author>;
  data: WorkData;
  /** openlibrary ref string /works/OL10000000W */
  key: Scalars['String']['output'];
  lastModified: Scalars['ISO8601Date']['output'];
  revision: Scalars['Int']['output'];
};

export type WorkData = {
  __typename?: 'WorkData';
  /** array of openlibrary ref strings ['/works/OL10000000W',...] */
  authors: Array<Scalars['String']['output']>;
  /** array of cover identifiers for openlibrary */
  covers?: Maybe<Array<Scalars['Int']['output']>>;
  created: Scalars['ISO8601DateTime']['output'];
  /** openlibrary ref string /works/OL10000000W */
  key: Scalars['String']['output'];
  lastModified: Scalars['ISO8601Date']['output'];
  latestRevision: Scalars['Int']['output'];
  revision: Scalars['Int']['output'];
  title: Scalars['String']['output'];
};

export type CreateBookcaseMutationVariables = Exact<{
  input: CreateBookcaseInput;
}>;


export type CreateBookcaseMutation = { __typename?: 'Mutation', createBookcase?: { __typename?: 'CreateBookcasePayload', bookcase: { __typename?: 'Bookcase', name: string } } | null };

export type WorksQueryVariables = Exact<{
  title?: InputMaybe<Scalars['String']['input']>;
}>;


export type WorksQuery = { __typename?: 'Query', works: Array<{ __typename?: 'Work', lastModified: any, data: { __typename?: 'WorkData', title: string, created: any, lastModified: any }, authors: Array<{ __typename?: 'Author', data: { __typename?: 'AuthorData', name: string } }> }> };


export const CreateBookcaseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateBookcase"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateBookcaseInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createBookcase"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bookcase"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<CreateBookcaseMutation, CreateBookcaseMutationVariables>;
export const WorksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Works"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"title"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"works"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"title"},"value":{"kind":"Variable","name":{"kind":"Name","value":"title"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lastModified"}},{"kind":"Field","name":{"kind":"Name","value":"data"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"created"}},{"kind":"Field","name":{"kind":"Name","value":"lastModified"}}]}},{"kind":"Field","name":{"kind":"Name","value":"authors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"data"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<WorksQuery, WorksQueryVariables>;